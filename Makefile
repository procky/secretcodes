# Makefile

IMAGE_NAME = secretcodes-dev-env
CONTAINER_NAME_PREFIX = secretcodes-dev

# --- Docker Commands ---

# Build the base Docker image (without node_modules)
build: Dockerfile package.json
	docker build -t $(IMAGE_NAME) .

# Install dependencies using Yarn inside a container.
# This will update/create yarn.lock and node_modules on your host via the volume mount.
install-deps: build
	@echo "Installing dependencies and updating yarn.lock using a container..."
	docker run --rm \
		-v $(shell pwd):/usr/src/app \
		-w /usr/src/app \
		$(IMAGE_NAME) yarn install

# Run tests inside a Docker container.
test: build
	@echo "Running tests in container (assuming dependencies are installed)..."
	docker run --rm \
		-v $(shell pwd):/usr/src/app \
		-w /usr/src/app \
		$(IMAGE_NAME) yarn test

# Interactive shell inside a container with your code mounted.
# Useful for manual commands or debugging.
shell: build
	docker run --rm -it \
		-v $(shell pwd):/usr/src/app \
		-w /usr/src/app \
		$(IMAGE_NAME) sh

# --- Linting & Formatting ---

# Run ESLint
lint: build
	@echo "Running ESLint..."
	docker run --rm \
		-v $(shell pwd):/usr/src/app \
		-w /usr/src/app \
		$(IMAGE_NAME) yarn lint

# Fix ESLint issues
lint-fix: build
	@echo "Fixing ESLint issues..."
	docker run --rm \
		-v $(shell pwd):/usr/src/app \
		-w /usr/src/app \
		$(IMAGE_NAME) yarn lint:fix

# Format code with Prettier
format: build
	@echo "Formatting code with Prettier..."
	docker run --rm \
		-v $(shell pwd):/usr/src/app \
		-w /usr/src/app \
		$(IMAGE_NAME) yarn format

# --- Utility ---
.PHONY: build install-deps test shell lint lint-fix format clean-image clean-node-modules clean

# Clean up the Docker image
clean-image:
	docker rmi $(IMAGE_NAME) || true

# Clean up local node_modules and yarn.lock (generated by 'make install-deps')
clean-local-deps:
	@echo "Removing local node_modules and yarn.lock..."
	rm -rf node_modules
	rm -f yarn.lock

# Full cleanup
clean: clean-image clean-local-deps

# Help message
help:
	@echo "Available commands:"
	@echo "  make build            Build the base Docker image (no dependencies installed in image)"
	@echo "  make install-deps     Install/update dependencies and yarn.lock using a container (updates host files)"
	@echo "  make test             Run tests in a container (assumes dependencies are present from 'install-deps')"
	@echo "  make shell            Open an interactive shell in a Docker container"
	@echo "  make lint             Run ESLint to check for issues"
	@echo "  make lint-fix         Fix auto-fixable ESLint issues"
	@echo "  make format           Format code with Prettier"
	@echo "  make clean-image      Remove the Docker image"
	@echo "  make clean-local-deps Remove local node_modules and yarn.lock"
	@echo "  make clean            Full cleanup (image and local deps)"
	@echo "  make help             Show this help message"

# Default target
all: test
